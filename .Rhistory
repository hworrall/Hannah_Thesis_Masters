q()
expander <- function(aa, bb){
cc <- matrix(sample(000.1, length(bb) * length(aa), replace=TRUE),
length(bb), length(aa))
for(ii in 1:dim(as.matrix(bb))[1]) {
cc[ii, ][which(aa == bb[ii])] <- 1
}
return(cc)
}
do_work <- function(data, places=c()){
if(length(places) == 0) {
places <- 1:dim(data)[2]
}
new_data <- c()
for(i in places) {
stuff <- c()
for(value in data[, i]) {
if(!value %in% stuff) { stuff <- c(stuff, value) }
}
thing <- expander(stuff, data[, i])
new_data <- cbind(new_data, thing)
}
for(i in 1:dim(data)[2]) {
if(i %in% places) {
next
} else {
new_data <- cbind(new_data, data[, i])
}
}
return(data.matrix(new_data))
}
arr <- matrix(cbind(c('spam', 'spam', 'eggs', 'spam'), c('11', '3.14', '-20', '42')), 4, 2)
out <- do_work(arr)
stopifnot(all(as.matrix(out) %in% c(0, 1)))
out
arr <- matrix(c('spam', 'spam', 'eggs', 'spam'))
out <- do_work(arr)
out
stopifnot(all(dim(out) == c(4,2)))
stopifnot(all(out == matrix(c(0, 0, 1, 0, 1, 1, 0, 1), 4, 2)))
arr <- matrix(cbind(c('spam', 'spam', 'eggs', 'spam'), c('11', '3.14', '-20', '42')), 4, 2)
out = do_work(arr, 1)
stopifnot(all(dim(out) == c(4,3)))
stopifnot(all(arr[, 2] == out[, 3]))
arr
arr <- matrix(c('spam', 'spam', 'eggs', 'spam'))
places<-c()
data<-arr
length(places)
1:dim(data)[2]
dim(data)
data
new_data <- c()
stuff <- c()
for(valine in data[,i]){print(valine)}
for(i in places){print(i)}
places
places<-1:dim(data)[2]
places
for(i in places){print i}
for(i in places){print(i)}
log2<-c(0,1,2,3,4,5)
y<-c(0,2,3,5,7,10)
m<-c(7,9,8,7,9,11)
plot(log2,y/m)
model.eight<-glm(cbind(y,m-y)~log2,family=binomial())
3
sample(1:10)
sample(1:10)==1:10
none<-rep(NA,10000)
for(i in 1:10000){
order<-sample(1:10,replace=F)
none[i]<-ifelse(mean(order==1:10)==0,1,0)
}
mean(none)
none<-rep(NA,100000)
for(i in 1:100000){
order<-sample(1:10,replace=F)
none[i]<-ifelse(mean(order==1:10)==0,1,0)
}
mean(none)
un<-rnorm(101,0,1.2^.5)
xn<-2+.01*seq(0,100)
yn<-rpois(`101,exp(xn+un))
)
yn<-rpois(101,exp(xn+un))
df<-rbind(un,yn,xn)
head(Df)
head(df)
df<-cbind(un,yn,xn)
head(df)
model1<-glm(yn~xn+un,data=df,family='poisson')
df<-data.frame(un,yn,xn)
head(df)
model1<-glm(yn~xn+un,data=df,family='poisson')
library(mlmRev)
install.packages("mlmRev")
library(mlmRev)
model2<-glmer(yn~xn+(1|un),data=df,family='poisson')
summary(model1);summary(model2)
par(mfrow=c(1,2))
hist(residuals(model1));hist(residuals(model2))
hist(residuals(model1));hist(residuals(model2))
qqnorm(residuals(model1));qqline(residuals(model1))
qqnorm(residuals(model2));qqline(residuals(model2))
logLik(model1);logLik(model2)
library(farway)
library(faraway)
data("potuse")
head(potuse)
summary(potuse)
table(potuse$sex)
?potuse
setwd("C:/Users/Tony/Desktop/Hannah_Thessis_Masters")
load('Weighted Adjacency Matrix, Modern Era.Rdata')
df<-read.csv('modeling.frame.csv')
data_for_theis<-data
data_for_theis<-df
rm(df)
plot(table(data_for_thesis$Season),ylab='Number of Trades')
data_for_thesis<-data_for_theis
rm(data_for_theis)
plot(table(data_for_thesis$Season),ylab='Number of Trades')
head(data_for_thesis)
total.trades<-matrix(apply(a.mat.weighted,c(1,2),sum),nrow=31)
colnames(total.trades)<-names(table(data_for_thesis$Team1))
rownames(total.trades)<-names(table(data_for_thesis$Team1))
library(gplots)
heatmap.2(x = total.trades, Rowv = FALSE, Colv = FALSE, dendrogram = "none",
cellnote = total.trades, notecol = "black", notecex = .5,
trace = "none", key = FALSE, margins = c(7, 11))
dim(a.mat.weighted)
a.mat.weighted[1,28,]
sum(a.mat.weighted[1,28,])
a.mat.weighted[23,27,]
a.mat.weighted[2,22,]
a.mat.weighted[2,20,]
a.mat.weighted[2,21,]
total.trades<-matrix(apply(a.mat.weighted,c(1,2),sum),nrow=31)
colnames(total.trades)<-names(table(data_for_thesis$Team1))
rownames(total.trades)<-names(table(data_for_thesis$Team1))
library(gplots)
heatmap.2(x = total.trades, Rowv = FALSE, Colv = FALSE, dendrogram = "none",
cellnote = total.trades, notecol = "black", notecex = .5,
trace = "none", key = FALSE, margins = c(7, 11))
hist(total.trades,breaks=15)
table(data_for_thesis$season)
colnames(total.trades)
colnames(total.trades)
dim(total.trades)
rownames(total.trades)
colnames(total.trades)<-names(table(data_for_thesis$team.1))
head(data_for_thesis)
table(data_for_thesis$team.1)
colnames(total.trades)<-names(table(data_for_thesis$team.1))
rownames(total.trades)<-names(table(data_for_thesis$team.1))
heatmap.2(x = total.trades, Rowv = FALSE, Colv = FALSE, dendrogram = "none",
cellnote = total.trades, notecol = "black", notecex = .5,
trace = "none", key = FALSE, margins = c(7, 11))
table(data_for_thesis$team.1)[28]
a.mat.weighted[2,12,]
a.mat.weighted[2,17,]
library(MASS)
model.frame<-read.csv('modeling.frame.csv')
head(model.frame)
mixed<-glmmPQL(connection_strength~year_one_lag+team.1_trade_volume+team.2_trade_volume+distance,
random=~1|team.1,data=model.frame,family=poisson)
summary(mixed)
mixed<-lmer(connection_strength~year_one_lag+team.1_trade_volume+team.2_trade_volume+distance+(1|team.1:team.2),data=model.frame)
library(MASS)
mixed<-lmer(connection_strength~year_one_lag+team.1_trade_volume+team.2_trade_volume+distance+(1|team.1:team.2),data=model.frame)
install.packages("lme4")
mixed<-lmer(connection_strength~year_one_lag+team.1_trade_volume+team.2_trade_volume+distance+(1|team.1:team.2),data=model.frame)
library(lme4)
mixed<-lmer(connection_strength~year_one_lag+team.1_trade_volume+team.2_trade_volume+distance+(1|team.1:team.2),data=model.frame)
summary(mixed)
for(i in 1:nrow(model.frame)){
team1.index<-which(teams==model.frame$team.1[i])[1]
team2.index<-which(teams==model.frame$team.2[i])[1]
season.index<-which(seasons==model.frame$season[i])[1]
if(season.index!=1){
model.frame$year_one_lag[i]<-a.mat.weighted[team1.index,team2.index,season.index-1]
model.frame$team.1_trade_volume[i]<-apply(a.mat.weighted[,,season.index],1,sum)[team1.index]
model.frame$team.2_trade_volume[i]<-apply(a.mat.weighted[,,season.index],2,sum)[team2.index]
graph.object<-graph_from_adjacency_matrix(a.mat.weighted[,,season.index])
graph.object_last<-graph_from_adjacency_matrix(a.mat.weighted[,,season.index-1])
model.frame$distance[i]<-distances(graph.object)[team1.index,team2.index]
}
}
head(data_for_thesis)
data<-read.csv('full_dataset.csv')
head(data)
teams<-names(table(data$Team1))
seasons<-names(table(data$Season))
for(i in 1:nrow(model.frame)){
team1.index<-which(teams==model.frame$team.1[i])[1]
team2.index<-which(teams==model.frame$team.2[i])[1]
season.index<-which(seasons==model.frame$season[i])[1]
if(season.index!=1){
model.frame$year_one_lag[i]<-a.mat.weighted[team1.index,team2.index,season.index-1]
model.frame$team.1_trade_volume[i]<-apply(a.mat.weighted[,,season.index],1,sum)[team1.index]
model.frame$team.2_trade_volume[i]<-apply(a.mat.weighted[,,season.index],2,sum)[team2.index]
graph.object<-graph_from_adjacency_matrix(a.mat.weighted[,,season.index])
graph.object_last<-graph_from_adjacency_matrix(a.mat.weighted[,,season.index-1])
model.frame$distance[i]<-distances(graph.object)[team1.index,team2.index]
model.frame$distance_last_year[i]<-distances(graph.object_last)[team1.index,team2.index]
}
}
dim(a.mat.weighted)
for(i in 1:nrow(model.frame)){
team1.index<-which(teams==model.frame$team.1[i])[1]
team2.index<-which(teams==model.frame$team.2[i])[1]
season.index<-which(seasons==model.frame$season[i])[1]
if(season.index!=1){
print(i)
print(season.index)
model.frame$year_one_lag[i]<-a.mat.weighted[team1.index,team2.index,season.index-1]
model.frame$team.1_trade_volume[i]<-apply(a.mat.weighted[,,season.index],1,sum)[team1.index]
model.frame$team.2_trade_volume[i]<-apply(a.mat.weighted[,,season.index],2,sum)[team2.index]
graph.object<-graph_from_adjacency_matrix(a.mat.weighted[,,season.index])
graph.object_last<-graph_from_adjacency_matrix(a.mat.weighted[,,season.index-1])
model.frame$distance[i]<-distances(graph.object)[team1.index,team2.index]
model.frame$distance_last_year[i]<-distances(graph.object_last)[team1.index,team2.index]
}
}
model.frame[1,]
model.frame[89,]
i<-89
team1.index<-which(teams==model.frame$team.1[i])[1]
team2.index<-which(teams==model.frame$team.2[i])[1]
season.index<-which(seasons==model.frame$season[i])[1]
team1.index
team2.index
teams[13]
season.index
which(seasons==model.frame$season[i])
seasons
head(data_for_thesis)
d<-read.csv('thesis_data.csv')
head(d)
seasons<-names(table(data_for_thesis$season))
for(i in 1:nrow(model.frame)){
team1.index<-which(teams==model.frame$team.1[i])[1]
team2.index<-which(teams==model.frame$team.2[i])[1]
season.index<-which(seasons==model.frame$season[i])[1]
if(season.index!=1){
print(i)
print(season.index)
model.frame$year_one_lag[i]<-a.mat.weighted[team1.index,team2.index,season.index-1]
model.frame$team.1_trade_volume[i]<-apply(a.mat.weighted[,,season.index],1,sum)[team1.index]
model.frame$team.2_trade_volume[i]<-apply(a.mat.weighted[,,season.index],2,sum)[team2.index]
graph.object<-graph_from_adjacency_matrix(a.mat.weighted[,,season.index])
graph.object_last<-graph_from_adjacency_matrix(a.mat.weighted[,,season.index-1])
model.frame$distance[i]<-distances(graph.object)[team1.index,team2.index]
model.frame$distance_last_year[i]<-distances(graph.object_last)[team1.index,team2.index]
}
}
library(igraph)
#need lag variables. Let's start with a one-year lag
for(i in 1:nrow(model.frame)){
team1.index<-which(teams==model.frame$team.1[i])[1]
team2.index<-which(teams==model.frame$team.2[i])[1]
season.index<-which(seasons==model.frame$season[i])[1]
if(season.index!=1){
model.frame$year_one_lag[i]<-a.mat.weighted[team1.index,team2.index,season.index-1]
model.frame$team.1_trade_volume[i]<-apply(a.mat.weighted[,,season.index],1,sum)[team1.index]
model.frame$team.2_trade_volume[i]<-apply(a.mat.weighted[,,season.index],2,sum)[team2.index]
graph.object<-graph_from_adjacency_matrix(a.mat.weighted[,,season.index])
graph.object_last<-graph_from_adjacency_matrix(a.mat.weighted[,,season.index-1])
model.frame$distance[i]<-distances(graph.object)[team1.index,team2.index]
model.frame$distance_last_year[i]<-distances(graph.object_last)[team1.index,team2.index]
}
}
model.frame$distance_last_year<-rep(NA,nrow(model.frame))
for(i in 1:nrow(model.frame)){
team1.index<-which(teams==model.frame$team.1[i])[1]
team2.index<-which(teams==model.frame$team.2[i])[1]
season.index<-which(seasons==model.frame$season[i])[1]
if(season.index!=1){
model.frame$year_one_lag[i]<-a.mat.weighted[team1.index,team2.index,season.index-1]
model.frame$team.1_trade_volume[i]<-apply(a.mat.weighted[,,season.index],1,sum)[team1.index]
model.frame$team.2_trade_volume[i]<-apply(a.mat.weighted[,,season.index],2,sum)[team2.index]
graph.object<-graph_from_adjacency_matrix(a.mat.weighted[,,season.index])
graph.object_last<-graph_from_adjacency_matrix(a.mat.weighted[,,season.index-1])
model.frame$distance[i]<-distances(graph.object)[team1.index,team2.index]
model.frame$distance_last_year[i]<-distances(graph.object_last)[team1.index,team2.index]
}
}
for(i in 1:nrow(model.frame)){
team1.index<-which(teams==model.frame$team.1[i])[1]
team2.index<-which(teams==model.frame$team.2[i])[1]
season.index<-which(seasons==model.frame$season[i])[1]
if(season.index!=1){
print(i)
model.frame$year_one_lag[i]<-a.mat.weighted[team1.index,team2.index,season.index-1]
model.frame$team.1_trade_volume[i]<-apply(a.mat.weighted[,,season.index],1,sum)[team1.index]
model.frame$team.2_trade_volume[i]<-apply(a.mat.weighted[,,season.index],2,sum)[team2.index]
graph.object<-graph_from_adjacency_matrix(a.mat.weighted[,,season.index])
graph.object_last<-graph_from_adjacency_matrix(a.mat.weighted[,,season.index-1])
model.frame$distance[i]<-distances(graph.object)[team1.index,team2.index]
model.frame$distance_last_year[i]<-distances(graph.object_last)[team1.index,team2.index]
}
}
model.frame[211,]
distances(graph.object)[team1.index,team2.index]
apply(a.mat.weighted[,,season.index],1,sum)[team1.index]
apply(a.mat.weighted[,,season.index],2,sum)[team2.index]
distances(graph.object)[team1.index,team2.index]
team1.index
team2.index
teams
teams<-names(table(data_for_thesis$team.1))
for(i in 1:nrow(model.frame)){
team1.index<-which(teams==model.frame$team.1[i])[1]
team2.index<-which(teams==model.frame$team.2[i])[1]
season.index<-which(seasons==model.frame$season[i])[1]
if(season.index!=1){
model.frame$year_one_lag[i]<-a.mat.weighted[team1.index,team2.index,season.index-1]
model.frame$team.1_trade_volume[i]<-apply(a.mat.weighted[,,season.index],1,sum)[team1.index]
model.frame$team.2_trade_volume[i]<-apply(a.mat.weighted[,,season.index],2,sum)[team2.index]
graph.object<-graph_from_adjacency_matrix(a.mat.weighted[,,season.index])
graph.object_last<-graph_from_adjacency_matrix(a.mat.weighted[,,season.index-1])
model.frame$distance[i]<-distances(graph.object)[team1.index,team2.index]
model.frame$distance_last_year[i]<-distances(graph.object_last)[team1.index,team2.index]
}
}
hist(model.frame$distance_last_year)
hist(model.frame$distance)
mixed<-lmer(connection_strength~year_one_lag+team.1_trade_volume+team.2_trade_volume+distance_last_year+(1|team.1:team.2),data=model.frame) #can get this to run but assumptions are wrong
dim(model.frame)
dim(na.omit(model.frame))
summary(model.frame$distance_last_year)
which(is.na(model.frame$distance_last_year))
which(is.na(model.frame$distance))
dim(model.frame)
distances(graph.object_last)[team1.index,team2.index]
distances(graph.object_last)
team1.index
team2.index
model.frame[5115,]
i
which(teams==model.frame$team.2[i])[1]
teams
teams<-names(table(data_for_thesis$team.1),)
teams<-names(table(data_for_thesis$team.1),'Winnipeg Jets')
teams<-c(names(table(data_for_thesis$team.1)),'Winnipeg Jets')
teams
for(i in 1:nrow(model.frame)){
team1.index<-which(teams==model.frame$team.1[i])[1]
team2.index<-which(teams==model.frame$team.2[i])[1]
season.index<-which(seasons==model.frame$season[i])[1]
if(season.index!=1){
model.frame$year_one_lag[i]<-a.mat.weighted[team1.index,team2.index,season.index-1]
model.frame$team.1_trade_volume[i]<-apply(a.mat.weighted[,,season.index],1,sum)[team1.index]
model.frame$team.2_trade_volume[i]<-apply(a.mat.weighted[,,season.index],2,sum)[team2.index]
graph.object<-graph_from_adjacency_matrix(a.mat.weighted[,,season.index])
graph.object_last<-graph_from_adjacency_matrix(a.mat.weighted[,,season.index-1])
model.frame$distance[i]<-distances(graph.object)[team1.index,team2.index]
model.frame$distance_last_year[i]<-distances(graph.object_last)[team1.index,team2.index]
}
}
dim(modeling.frame)
dim(model.frame)
dim(na.omit(model.frame))
team2.index
which(is.na(model.frame))
dim(model.frame)
which(is.na(model.frame$distance_last_year))
i<-5105
team1.index<-which(teams==model.frame$team.1[i])[1]
team2.index<-which(teams==model.frame$team.2[i])[1]
season.index<-which(seasons==model.frame$season[i])[1]
model.frame$year_one_lag[i]<-a.mat.weighted[team1.index,team2.index,season.index-1]
team1.index
team2.index
season.index
model.frame[5094,]
i<-5094
team1.index<-which(teams==model.frame$team.1[i])[1]
team2.index<-which(teams==model.frame$team.2[i])[1]
season.index<-which(seasons==model.frame$season[i])[1]
model.frame$year_one_lag[i]<-a.mat.weighted[team1.index,team2.index,season.index-1]
season.index
model.frame<-na.omit(model.frame)
mixed<-lmer(connection_strength~year_one_lag+team.1_trade_volume+team.2_trade_volume+distance_last_year+(1|team.1:team.2),data=model.frame) #can get this to run but assumptions are wrong
dim(model.frame)
model.frame$distance<-ifelse(model.frame$distance>100,15,model.frame$distance)
model.frame$distance_last_year<-ifelse(model.frame$distance_last_year>100,15,model.frame$distance_last_year)
mixed<-lmer(connection_strength~year_one_lag+team.1_trade_volume+team.2_trade_volume+distance_last_year+(1|team.1:team.2),data=model.frame) #can get this to run but assumptions are wrong
summary(mixed)
hist(model.frame$team.1_trade_volume)
for(i in 1:nrow(model.frame)){
team1.index<-which(teams==model.frame$team.1[i])[1]
team2.index<-which(teams==model.frame$team.2[i])[1]
season.index<-which(seasons==model.frame$season[i])[1]
if(season.index!=1){
model.frame$year_one_lag[i]<-a.mat.weighted[team1.index,team2.index,season.index-1]
model.frame$team.1_trade_volume[i]<-apply(a.mat.weighted[,,season.index],1,sum)[team1.index]
model.frame$team.2_trade_volume[i]<-apply(a.mat.weighted[,,season.index],2,sum)[team2.index]
model.frame$team.1_trade_volume_last_year[i]<-apply(a.mat.weighted[,,season.index-1],1,sum)[team1.index]
model.frame$team.2_trade_volume_last_year[i]<-apply(a.mat.weighted[,,season.index-1],2,sum)[team2.index]
graph.object<-graph_from_adjacency_matrix(a.mat.weighted[,,season.index])
graph.object_last<-graph_from_adjacency_matrix(a.mat.weighted[,,season.index-1])
model.frame$distance[i]<-distances(graph.object)[team1.index,team2.index]
model.frame$distance_last_year[i]<-distances(graph.object_last)[team1.index,team2.index]
}
}
model.frame$distance<-ifelse(model.frame$distance>100,15,model.frame$distance)
model.frame$distance_last_year<-ifelse(model.frame$distance_last_year>100,15,model.frame$distance_last_year)
mixed<-lmer(connection_strength~year_one_lag+team.1_trade_volume_last_year+team.2_trade_volume_last_year+distance_last_year+(1|team.1:team.2),data=model.frame) #can get this to run but assumptions are wrong
summary(mixed)
mixed<-lmer(connection_strength~year_one_lag+I(team.1_trade_volume_last_year+team.2_trade_volume_last_year)+distance_last_year+(1|team.1:team.2),data=model.frame) #can get this to run but assumptions are wrong
summary(mixed)
table(model.frame$distance_last_year)
table(model.frame$year_one_lag)
mixed<-lmer(connection_strength~year_one_lag+distance_last_year+(1|team.1:team.2),data=model.frame) #can get this to run but assumptions are wrong
summary(mixed)
mixed<-lmer(connection_strength~year_one_lag+(1|team.1:team.2),data=model.frame) #can get this to run but assumptions are wrong
summary(mixed)
mixed<-lmer(connection_strength~year_one_lag+I(team.1_trade_volume_last_year+team.2_trade_volume_last_year)+distance_last_year+(1|team.1:team.2),data=model.frame) #can get this to run but assumptions are wrong
summary(mixed)
mixed<-lmer(connection_strength~I(team.1_trade_volume_last_year+team.2_trade_volume_last_year)+distance_last_year+(1|team.1:team.2),data=model.frame) #can get this to run but assumptions are wrong
summary(mixed)
heatmap.2(x = total.trades, Rowv = FALSE, Colv = FALSE, dendrogram = "none",
cellnote = total.trades, notecol = "black", notecex = .5,
trace = "none", key = FALSE, margins = c(7, 11))
a.mat.weighted[1,28,]
teams[28]
mod.frame<-model.frame
teams[1]
mod.frame<-mod.frame[-which(mod.frame$team.1=='Anaheim Ducks' & mod.frame$team.2=='Toronto Maple Leafs')]
mod.frame<-mod.frame[-which(mod.frame$team.2=='Anaheim Ducks' & mod.frame$team.1=='Toronto Maple Leafs')]
mixed.no.big<-lmer(connection_strength~year_one_lag+I(team.1_trade_volume_last_year+team.2_trade_volume_last_year)+distance_last_year+(1|team.1:team.2),data=mod.frame) #can get this to run but assumptions are wrong
mixed.no.big<-lmer(connection_strength~year_one_lag+I(team.1_trade_volume_last_year+team.2_trade_volume_last_year)+distance_last_year+(1|team.1:team.2),data=mod.frame) #can get this to run but assumptions are wrong
head(mod.frame)
mod.frame<-model.frame
mod.frame<-mod.frame[-which(mod.frame$team.1=='Anaheim Ducks' & mod.frame$team.2=='Toronto Maple Leafs'),]
mod.frame<-mod.frame[-which(mod.frame$team.2=='Anaheim Ducks' & mod.frame$team.1=='Toronto Maple Leafs'),]
mixed.no.big<-lmer(connection_strength~year_one_lag+I(team.1_trade_volume_last_year+team.2_trade_volume_last_year)+distance_last_year+(1|team.1:team.2),data=mod.frame) #can get this to run but assumptions are wrong
mod.frame<-model.frame
mod.frame<-mod.frame[-which(mod.frame$team.1=='Anaheim Ducks' & mod.frame$team.2=='Toronto Maple Leafs'),]
mod.frame<-mod.frame[-which(mod.frame$team.2=='Anaheim Ducks' & mod.frame$team.1=='Toronto Maple Leafs'),]
mod.frame<-model.frame
mod.frame<-mod.frame[-which(mod.frame$team.1=='Anaheim Ducks' & mod.frame$team.2=='Toronto Maple Leafs'),]
which(mod.frame$team.2=='Anaheim Ducks' & mod.frame$team.1=='Toronto Maple Leafs')
mod.frame<-model.frame
mod.frame<-mod.frame[-which(mod.frame$team.1=='Anaheim Ducks' & mod.frame$team.2=='Toronto Maple Leafs'),]
mixed.no.big<-lmer(connection_strength~year_one_lag+I(team.1_trade_volume_last_year+team.2_trade_volume_last_year)+distance_last_year+(1|team.1:team.2),data=mod.frame) #can get this to run but assumptions are wrong
summary(mixed)
summary(mixed.no.big)
mixed<-lmer(connection_strength~year_one_lag+I(team.1_trade_volume_last_year+team.2_trade_volume_last_year)+distance_last_year+(1|team.1:team.2),data=model.frame) #can get this to run but assumptions are wrong
summary(mixed)
summary(mixed.no.big)
write.csv(model.frame,file='data_worked_with_june_10.csv')
